{"version":3,"sources":["views/movie-component/MovieComponent.module.css","views/movie-details/movie-details-side-pannel/MovieDetailsSidePanel.module.css","views/movie-details/movie-details-side-pannel/side-panel-info-block/SidePanelInfoBlock.module.css","views/movie-details/movie-details-actors-section/MovieDetailsActorsSection.module.css","util/NavigationUtil.ts","img/logo.svg","util/FetchUtil.ts","views/movie-list/MovieListContext.tsx","views/nav-bar/Searchbar/Searchbar.tsx","views/nav-bar/NavBar.tsx","util/ComponentSize.ts","views/movie-component/movie-poster/MoviePoster.tsx","img/film.svg","img/star.svg","views/movie-component/movie-poster-caption/MoviePosterCaption.tsx","views/movie-component/MovieComponent.tsx","views/empty-list-component/EmptyListComponent.tsx","img/tmdb.svg","views/tmdb-attribution/TMDbAttribution.tsx","domain/DetailedMovie.ts","views/genre-chip-component/GenreChip.tsx","views/movie-list/MovieListComponent.tsx","views/movie-details/DetailedMovieContext.tsx","views/movie-details/movie-details-main-section/MovieDetailsMainSection.tsx","views/movie-details/movie-details-side-pannel/side-panel-info-block/SidePanelInfoBlock.tsx","img/imdb.svg","views/movie-details/movie-details-side-pannel/rating/Rating.tsx","img/play.svg","views/movie-details/movie-details-side-pannel/trailer-button/TrailerButton.tsx","views/movie-details/movie-details-side-pannel/MovieDetailsSidePanel.tsx","img/person.svg","views/movie-details/movie-details-actors-section/actor-component/actor-photo/ActorPhoto.tsx","views/movie-details/movie-details-actors-section/actor-component/ActorComponent.tsx","views/movie-details/movie-details-actors-section/MovieDetailsActorsSection.tsx","util/WindowDimensionUtil.tsx","views/movie-details/MovieDetailsComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx","views/nav-bar/NavBar.module.css","views/movie-details/movie-details-main-section/MovieDetailsMainSection.module.css","views/movie-details/movie-details-actors-section/actor-component/ActorComponent.module.css","views/movie-component/movie-poster/MoviePoster.module.css","views/movie-component/movie-poster-caption/MoviePosterCaption.module.css","views/movie-list/MovieList.module.css","views/movie-details/movie-details-side-pannel/rating/Rating.module.css","views/genre-chip-component/GenreChip.module.css","views/movie-details/MovieDetailsComponent.module.css","views/movie-details/movie-details-side-pannel/trailer-button/TrailerButton.module.css"],"names":["module","exports","NavigationPath","RequestType","API_KEY","process","DEFAULT_BASE_URL","Fetcher","requestType","updateState","baseUrl","requiresApiKey","requestUrl","cacheExpirationTime","apiKeyParameter","this","name","value","separator","includes","time","cachedValue","window","sessionStorage","getItem","JSON","parse","isCacheExpired","timestamp","content","fetch","response","ok","json","jsonResponse","cache","Date","getTime","setItem","stringify","Error","status","defaultContext","movies","Array","search","genres","setSearch","setGenres","fetchUpcomingMovies","fetchPopularMovies","fetchMovies","fetchPopularMoviesByGenre","MovieListContext","createContext","MovieContextProvider","props","useState","setMovies","openSnackbar","setSnackbarOpen","handleError","Alert","elevation","variant","handleCloseSnackbar","event","reason","Provider","UPCOMING_MOVIES","it","results","catch","POPULAR_MOVIES","MOVIE_SEARCH","addParameter","setCacheExpiration","POPULAR_MOVIES_BY_GENRE","map","genre","id","join","children","Snackbar","open","autoHideDuration","onClose","severity","useStyles","makeStyles","theme","createStyles","position","alignSelf","textAlign","borderRadius","shape","backgroundColor","fade","palette","common","black","marginLeft","breakpoints","up","width","searchIcon","padding","spacing","color","colors","grey","height","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","Searchbar","classes","useContext","history","useHistory","className","InputBase","placeholder","root","input","inputProps","spellCheck","onChange","e","target","onBlur","onKeyPress","key","push","NavBar","ComponentSize","PosterQuality","pathname","useLocation","style","to","ROOT","activeClassName","LogoTitleDiv","Logo","src","logo","alt","NavTitle","NavigationLinks","active","isActive","toString","MoviePoster","size","undefined","LARGE","MEDIUM","poster_path","url","quality","LOW","MoviePosterCaption","Caption","MovieTitle","title","RatingRow","RatingIcon","star","vote_average","MovieComponent","movie","MOVIE_DETAILS","Component","EmptyListComponent","hidden","TMDbAttribution","flexDirection","marginTop","maxHeight","marginBottom","TMDbIcon","GENRE_LIST","GenreChip","isSelected","componentSize","defaultStyle","onClick","cursor","MovieListComponent","useEffect","length","startsWith","SEARCH","split","substring","Wrapper","GenreList","newGenres","slice","index","indexOf","splice","MovieList","detailedMovie","rating","averageRating","numVotes","movieCredits","trailer","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieVideos","DetailedMovieContext","DetailedMovieContextProvider","setDetailedMovie","setRating","credits","setCredits","setTrailer","fetchIMDbRating","imdb_id","IMDB_RATING","result","extractTrailer","videos","trailers","filter","type","toLowerCase","MOVIE_CREDITS","MOVIE_VIDEOS","MovieDetailsMainSection","runtimeHours","Math","floor","runtime","runtimeInHourMinutes","RightSection","Header","YearAndRuntime","release_year","PlotSummary","overview","SidePanelInfoBlock","Block","Rating","RowWrapper","TMDbLogo","tmdb_vote_average","tmdb_vote_count","IMDbLogo","imdb_vote_average","imdb_vote_count","TrailerButton","link","setLink","href","WrappingLink","rel","PlayButton","site","Play","formatPrice","price","Intl","NumberFormat","maximumSignificantDigits","format","formatVoteCount","count","MovieDetailsSidePanel","stringDate","infoList","director","release_date","toLocaleDateString","year","month","day","budget","revenue","ratingObject","SidePanel","info","ActorPhoto","normalStyle","backgroundImage","image_url","emptyStyle","PersonIcon","backgroundRepeat","backgroundSize","backgroundPosition","ActorComponent","profileUrl","profile_path","IMAGE_BASE_URL","ActorWrapper","TextCommon","Name","Character","character","MovieDetailsActorsSection","WrapperRow","actors","actor","getWindowDimensions","innerWidth","innerHeight","MovieDetailsComponent","movieUrl","parseInt","location","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","imageUrl","backdrop_path","notDesktop","mainDivStyle","mainSectionObject","sidePanelObject","vote_count","crew","directors","job","out","extractDirectorsName","InnerDiv","MainSection","cast","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe029e30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Component\":\"MovieComponent_Component__hC6_j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SidePanel\":\"MovieDetailsSidePanel_SidePanel__HWfhu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"SidePanelInfoBlock_Block__1JNpR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WrapperRow\":\"MovieDetailsActorsSection_WrapperRow__1ePqC\"};","export enum NavigationPath {\r\n    ROOT = \"/\",\r\n    UPCOMING_MOVIES = \"/upcoming\",\r\n    POPULAR_MOVIES = \"/popular\",\r\n    SEARCH = \"/search\",\r\n    MOVIE_DETAILS = \"/movie-details\"\r\n}","export default __webpack_public_path__ + \"static/media/logo.9282528c.svg\";","const API_KEY = process.env.REACT_APP_TMBD_API_KEY;\r\nconst DEFAULT_BASE_URL = \"https://api.themoviedb.org/3\";\r\n\r\nexport enum RequestType {\r\n    POPULAR_MOVIES = \"/movie/popular\",\r\n    UPCOMING_MOVIES = \"/movie/upcoming\",\r\n    MOVIE_SEARCH = \"/search/movie\",\r\n    MULTI_SEARCH = \"/search/multi\",\r\n    MOVIE_DETAILS = \"/movie\",\r\n    MOVIE_CREDITS = \"/credits\",\r\n    MOVIE_VIDEOS = \"/videos\",\r\n    IMDB_RATING = \"/rating\",\r\n    POPULAR_MOVIES_BY_GENRE = \"/discover/movie\"\r\n}\r\n\r\ninterface Cacheable {\r\n    timestamp: number;\r\n    content: JSON;\r\n}\r\n\r\nexport class Fetcher {\r\n    private requestUrl: string;\r\n    private readonly requestType: string;\r\n    private readonly updateState: (it: any) => void;\r\n    private cacheExpirationTime = 1000 * 60 * 60 * 12;\r\n\r\n    constructor(requestType: RequestType | string, updateState: (it: any) => void, private baseUrl: string = DEFAULT_BASE_URL, private requiresApiKey: boolean = true) {\r\n        const apiKeyParameter = requiresApiKey ? \"?api_key=\" + API_KEY : \"\";\r\n        this.requestUrl = baseUrl + requestType + apiKeyParameter;\r\n        this.requestType = requestType;\r\n        this.updateState = updateState;\r\n    }\r\n\r\n    addParameter(name: string, value: string): Fetcher {\r\n        const separator = this.requestUrl.includes(\"?\") ? \"&\" : \"?\";\r\n        this.requestUrl += separator + name + \"=\" + value;\r\n        return this;\r\n    }\r\n\r\n    setCacheExpiration(time: number): Fetcher {\r\n        this.cacheExpirationTime = time;\r\n        return this;\r\n    }\r\n\r\n    async fetch() {\r\n        const cachedValue: any = window.sessionStorage.getItem(this.requestType) ? JSON.parse(window.sessionStorage.getItem(this.requestType) as string) : \"\";\r\n\r\n        if (cachedValue !== \"\" && !this.isCacheExpired(cachedValue.timestamp)) {\r\n            this.updateState(cachedValue.content);\r\n        } else {\r\n            const response = await fetch(this.requestUrl);\r\n            if (response.ok) {\r\n                const jsonResponse = await response.json();\r\n                const cache: Cacheable = {timestamp: new Date().getTime(), content: jsonResponse}\r\n                window.sessionStorage.setItem(this.requestType, JSON.stringify(cache));\r\n                this.updateState(jsonResponse);\r\n            } else {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private isCacheExpired(timestamp: number): boolean {\r\n        const now = new Date().getTime();\r\n        return (now - timestamp) > this.cacheExpirationTime;\r\n    }\r\n}","import React, {createContext, ReactElement, useState} from \"react\";\r\nimport {Movie} from \"../../domain/Movie\";\r\nimport {Fetcher, RequestType} from \"../../util/FetchUtil\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert, {AlertProps} from \"@material-ui/lab/Alert\";\r\nimport {Genre} from \"../../domain/DetailedMovie\";\r\n\r\n\r\nconst defaultContext = {\r\n    movies: Array<Movie>(1),\r\n    search: \"\",\r\n    genres: Array<Genre>(),\r\n    setSearch: (value: string) => {},\r\n    setGenres: (genres: Array<Genre>) => {},\r\n    fetchUpcomingMovies: () => {},\r\n    fetchPopularMovies: () => {},\r\n    fetchMovies: (search: string) => {},\r\n    fetchPopularMoviesByGenre: () => {}\r\n}\r\n\r\nexport const MovieListContext = createContext(defaultContext);\r\n\r\ninterface Props {\r\n    children: ReactElement\r\n}\r\n\r\nconst MovieContextProvider = (props: Props) => {\r\n    const [movies, setMovies] = useState(Array<Movie>(1));\r\n    const [search, setSearch] = useState(\"\");\r\n    const [openSnackbar, setSnackbarOpen] = useState(false);\r\n    const [genres, setGenres] = useState(Array<Genre>());\r\n\r\n    const fetchPopularMovies = () => {\r\n        (new Fetcher(RequestType.POPULAR_MOVIES, (it) => {\r\n            setMovies(it.results)\r\n        })).fetch().catch(handleError);\r\n    }\r\n\r\n    const fetchUpcomingMovies = () => {\r\n        (new Fetcher(RequestType.UPCOMING_MOVIES, (it) => {\r\n            setMovies(it.results)\r\n        })).fetch().catch(handleError);\r\n    }\r\n\r\n    const fetchMovies = (search: string) => {\r\n        (new Fetcher(RequestType.MOVIE_SEARCH, (it) => {\r\n            setMovies(it.results);\r\n        })).addParameter(\"query\", search).setCacheExpiration(0).fetch().catch(handleError);\r\n    }\r\n\r\n    const fetchPopularMoviesByGenre = () => {\r\n        (new Fetcher(RequestType.POPULAR_MOVIES_BY_GENRE, (it) => {\r\n            setMovies(it.results);\r\n        })).addParameter(\"with_genres\", genres?.map(genre => genre.id).join(\", \")).setCacheExpiration(0).fetch().catch(handleError);\r\n    }\r\n\r\n    const handleError = () => {\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    function Alert(props: AlertProps) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <MovieListContext.Provider value={{movies, search, genres, setSearch, setGenres, fetchUpcomingMovies, fetchPopularMovies, fetchMovies, fetchPopularMoviesByGenre}}>\r\n            {props.children}\r\n\r\n            <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n                <Alert onClose={handleCloseSnackbar} severity=\"error\">\r\n                    Something went wrong\r\n                </Alert>\r\n            </Snackbar>\r\n        </MovieListContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MovieContextProvider;","import React, {useContext} from 'react';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport {createStyles, fade, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {colors} from \"@material-ui/core\";\r\nimport {MovieListContext} from \"../../movie-list/MovieListContext\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        search: {\r\n            position: 'relative',\r\n            alignSelf: 'center',\r\n            textAlign: 'start',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.black, 0.025),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.black, 0.07),\r\n            },\r\n            marginLeft: 0,\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            color: colors.grey[\"600\"],\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit'\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                width: '12ch',\r\n                '&:focus': {\r\n                    width: '20ch',\r\n                },\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function Searchbar() {\r\n    const classes = useStyles();\r\n    const {search, setSearch, fetchMovies} = useContext(MovieListContext);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n                <SearchIcon/>\r\n            </div>\r\n            <InputBase\r\n                placeholder=\"Search…\"\r\n                classes={{\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                }}\r\n                inputProps={{'aria-label': 'search'}}\r\n                spellCheck={false}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                onBlur={(e) => e.target.value = ''}\r\n                onKeyPress={(event) => {\r\n                    if (event.key === 'Enter') {\r\n                        history.push(`/search/${search}`);\r\n                        fetchMovies(search);\r\n                    }\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport logo from '../../img/logo.svg';\r\nimport {NavigationPath} from \"../../util/NavigationUtil\";\r\nimport {useLocation} from \"react-router\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Searchbar from \"./Searchbar/Searchbar\";\r\n\r\nfunction NavBar() {\r\n\r\n    const {pathname} = useLocation();\r\n\r\n    return (\r\n        <div className={style.NavBar}>\r\n            <NavLink to={NavigationPath.ROOT} activeClassName={style.LogoTitleDiv}>\r\n                <div className={style.LogoTitleDiv}>\r\n                    <img className={style.Logo} src={logo} alt={\"Website logo\"}/>\r\n                    <p className={style.NavTitle}>Kino Db</p>\r\n                </div>\r\n            </NavLink>\r\n\r\n            <ul className={style.NavigationLinks}>\r\n                <NavLink to={NavigationPath.UPCOMING_MOVIES} activeClassName={style.active}\r\n                         isActive={() => [NavigationPath.ROOT.toString(), NavigationPath.UPCOMING_MOVIES.toString()].includes(pathname)}>\r\n                    <li>{\"Upcoming Movies\"}</li>\r\n                </NavLink>\r\n                <NavLink to={NavigationPath.POPULAR_MOVIES} activeClassName={style.active}>\r\n                    <li>{\"Popular Movies\"}</li>\r\n                </NavLink>\r\n                <Searchbar/>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","export enum ComponentSize {\r\n    X_SMALL= \"xsm\",\r\n    SMALL = \"sm\",\r\n    MEDIUM = \"md\",\r\n    LARGE = \"lg\",\r\n    X_LARGE = \"xlg\"\r\n}","import React from 'react';\r\nimport style from './MoviePoster.module.css'\r\nimport logo from '../../../img/film.svg'\r\nimport {ComponentSize} from \"../../../util/ComponentSize\";\r\n\r\ninterface Props {\r\n    poster_path: string,\r\n    size?: ComponentSize,\r\n    quality?: PosterQuality\r\n}\r\n\r\nexport enum PosterQuality {\r\n    LOW = \"/w185\",\r\n    MEDIUM = \"/w500\",\r\n    HIGH = \"/w780\"\r\n}\r\n\r\nconst MoviePoster = (props: Props) => {\r\n\r\n    const size = (props.size === undefined || props.size !== ComponentSize.LARGE) ? ComponentSize.MEDIUM : props.size;\r\n\r\n    if (props.poster_path == null) {\r\n        return (\r\n            <div className={style[`poster-${size}`] + ' ' + style[`EmptyImage-${size}`]}>\r\n                <img className={style[`EmptyLogo-${size}`]} src={logo} alt={\"\"}/>\r\n            </div>\r\n        );\r\n    } else {\r\n        const quality = props.quality === undefined ? PosterQuality.LOW : props.quality;\r\n        const POSTER_BASE_URL = \"https://image.tmdb.org/t/p\";\r\n        const url = POSTER_BASE_URL + quality + props.poster_path;\r\n        return (\r\n            <div>\r\n                <img className={style[`poster-${size}`]} src={url} alt={\"Movie Poster\"}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviePoster;","export default __webpack_public_path__ + \"static/media/film.1ceaa3b0.svg\";","export default __webpack_public_path__ + \"static/media/star.de82f684.svg\";","import React from 'react';\r\nimport style from './MoviePosterCaption.module.css'\r\nimport star from '../../../img/star.svg';\r\n\r\ninterface Props {\r\n    title?: string\r\n    vote_average: number\r\n}\r\n\r\nconst MoviePosterCaption = (props: Props) => {\r\n    return (\r\n        <div className={style.Caption}>\r\n            <h2 className={style.MovieTitle}>{props.title ?? \"unknown title\"}</h2>\r\n            <div className={style.RatingRow}>\r\n                <img className={style.RatingIcon} src={star} alt={''}/>\r\n                <span>{props.vote_average ?? \"NaN\"}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MoviePosterCaption;","import React from 'react'\r\nimport MoviePoster from \"./movie-poster/MoviePoster\";\r\nimport MoviePosterCaption from \"./movie-poster-caption/MoviePosterCaption\";\r\nimport style from './MovieComponent.module.css'\r\nimport {Movie} from \"../../domain/Movie\";\r\nimport {NavigationPath} from \"../../util/NavigationUtil\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst MovieComponent = (movie: Movie) => {\r\n    return (\r\n        <NavLink to={`${NavigationPath.MOVIE_DETAILS}/${movie.id}`} className={style.Component}>\r\n            <MoviePoster poster_path={movie.poster_path}/>\r\n            <MoviePosterCaption title={movie.title ?? movie.name} vote_average={movie.vote_average}/>\r\n        </NavLink>\r\n    );\r\n}\r\n\r\nexport default MovieComponent;","import React from \"react\";\r\nimport style from './EmptyListComponent.module.css'\r\n\r\ninterface Props {\r\n    hidden: boolean;\r\n}\r\n\r\nfunction EmptyListComponent(props: Props): JSX.Element {\r\n    return (\r\n      <div style={style}>\r\n          <h1 hidden={props.hidden}>There are no movies that match your query... Sorry!</h1>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EmptyListComponent","export default __webpack_public_path__ + \"static/media/tmdb.7d4fa33f.svg\";","import React, {CSSProperties} from \"react\";\r\nimport TMDbIcon from \"../../img/tmdb.svg\";\r\n\r\nconst TMDbAttribution = () => {\r\n    const mainStyle = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        marginTop: \"2em\"\r\n    } as CSSProperties;\r\n\r\n    const imageStyle = {\r\n        maxHeight: \"6vh\",\r\n        width: \"auto\",\r\n        marginBottom: \"0.4em\"\r\n    } as CSSProperties\r\n\r\n    return (\r\n        <div style={mainStyle}>\r\n            <img style={imageStyle} src={TMDbIcon} alt={\"TMDB logo\"}/>\r\n            <span>This product uses the TMDb API but is not endorsed or certified by TMDb.</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TMDbAttribution;","export interface Genre {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\nexport interface DetailedMovie {\r\n    adult: boolean;\r\n    backdrop_path: string;\r\n    budget: number;\r\n    genres: Genre[];\r\n    id: number;\r\n    imdb_id: string;\r\n    overview: string;\r\n    popularity: number;\r\n    poster_path?: any;\r\n    release_date: string;\r\n    revenue: number;\r\n    runtime: number;\r\n    status: string;\r\n    tagline: string;\r\n    title: string;\r\n    vote_average: number;\r\n    vote_count: number;\r\n}\r\n\r\nexport const GENRE_LIST = [\r\n    {\"id\":28,\"name\":\"Action\"},\r\n    {\"id\":12,\"name\":\"Adventure\"},\r\n    {\"id\":16,\"name\":\"Animation\"},\r\n    {\"id\":35,\"name\":\"Comedy\"},\r\n    {\"id\":80,\"name\":\"Crime\"},\r\n    {\"id\":99,\"name\":\"Documentary\"},\r\n    {\"id\":18,\"name\":\"Drama\"},\r\n    {\"id\":10751,\"name\":\"Family\"},\r\n    {\"id\":14,\"name\":\"Fantasy\"},\r\n    {\"id\":36,\"name\":\"History\"},\r\n    {\"id\":27,\"name\":\"Horror\"},\r\n    {\"id\":10402,\"name\":\"Music\"},\r\n    {\"id\":9648,\"name\":\"Mystery\"},\r\n    {\"id\":10749,\"name\":\"Romance\"},\r\n    {\"id\":878,\"name\":\"Science Fiction\"},\r\n    {\"id\":53,\"name\":\"Thriller\"},\r\n    {\"id\":10752,\"name\":\"War\"},\r\n    {\"id\":37,\"name\":\"Western\"}\r\n]","import {Genre} from \"../../domain/DetailedMovie\";\r\nimport {ComponentSize} from \"../../util/ComponentSize\";\r\nimport style from './GenreChip.module.css';\r\nimport React, {CSSProperties} from \"react\";\r\n\r\ninterface Props {\r\n    genre: Genre,\r\n    size?: ComponentSize,\r\n    isSelected?: boolean,\r\n    onClick?: (genre: Genre, isSelected: boolean) => void\r\n}\r\n\r\nconst GenreChip = (props: Props) => {\r\n    const isSelected = props.isSelected ?? false\r\n\r\n    const componentSize = props.size === undefined ? ComponentSize.MEDIUM : props.size;\r\n    const handleClick = () => {\r\n        if (props.onClick !== undefined) {\r\n            props.onClick(props.genre, isSelected)\r\n        }\r\n    }\r\n\r\n    const defaultStyle = props.onClick !== undefined ? {cursor: \"pointer\"} as CSSProperties : undefined;\r\n\r\n    const selectedStyle = {\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"#fe6d8e\",\r\n        color: \"white\",\r\n    } as CSSProperties\r\n\r\n    return (\r\n        <div key={props.genre.id} className={style.common + ' ' + style[`size-${componentSize}`]}\r\n             style={isSelected ? selectedStyle : defaultStyle} onClick={handleClick}>\r\n            {props.genre.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenreChip;","import MovieComponent from \"../movie-component/MovieComponent\";\r\nimport React, {useContext, useEffect} from \"react\";\r\nimport EmptyListComponent from \"../empty-list-component/EmptyListComponent\";\r\nimport {NavigationPath} from \"../../util/NavigationUtil\";\r\nimport {useLocation} from \"react-router\";\r\nimport style from './MovieList.module.css'\r\nimport {MovieListContext} from \"./MovieListContext\";\r\nimport TMDbAttribution from \"../tmdb-attribution/TMDbAttribution\";\r\nimport {GENRE_LIST} from \"../../domain/DetailedMovie\";\r\nimport GenreChip from \"../genre-chip-component/GenreChip\";\r\n\r\nfunction MovieListComponent() {\r\n\r\n    const {\r\n        movies,\r\n        genres,\r\n        setGenres,\r\n        fetchUpcomingMovies,\r\n        fetchPopularMovies,\r\n        fetchMovies,\r\n        fetchPopularMoviesByGenre\r\n    } = useContext(MovieListContext);\r\n    const {pathname} = useLocation();\r\n\r\n    useEffect(() => {\r\n        switch (pathname) {\r\n            case NavigationPath.ROOT:\r\n                fetchUpcomingMovies();\r\n                break;\r\n            case NavigationPath.UPCOMING_MOVIES:\r\n                fetchUpcomingMovies();\r\n                break;\r\n            case NavigationPath.POPULAR_MOVIES:\r\n                if (!(genres?.length > 0)) {\r\n                    fetchPopularMovies();\r\n                } else {\r\n                    fetchPopularMoviesByGenre()\r\n                }\r\n                break;\r\n            default:\r\n                if (pathname.startsWith(NavigationPath.SEARCH))\r\n                    fetchMovies(pathname.split(NavigationPath.SEARCH)[1].substring(1));\r\n                break;\r\n        }\r\n    }, [pathname]);\r\n\r\n    useEffect(() => {\r\n        if (genres !== undefined) {\r\n            if (genres.length > 0) {\r\n                fetchPopularMoviesByGenre()\r\n            } else {\r\n                fetchPopularMovies()\r\n            }\r\n        }\r\n    }, [genres])\r\n\r\n    return (\r\n        <div className={style.Wrapper}>\r\n            {pathname === NavigationPath.POPULAR_MOVIES ?\r\n                <div className={style.GenreList}>\r\n                    {GENRE_LIST.map(genre => (\r\n                        <GenreChip key={genre.id} genre={genre} isSelected={genres.includes(genre)}\r\n                                   onClick={(genre, isSelected) => {\r\n                                       const newGenres = genres.slice()\r\n                                       if (!isSelected) {\r\n                                           if(newGenres.indexOf(genre) === -1)\r\n                                               newGenres.push(genre);\r\n                                       } else {\r\n                                           const index = newGenres.indexOf(genre)\r\n                                           if (index !== -1)\r\n                                               newGenres.splice(index, 1)\r\n                                       }\r\n                                       setGenres(newGenres)\r\n                                   }}/>\r\n                    ))}\r\n                </div> : null\r\n            }\r\n\r\n            <div className={style.MovieList}>\r\n                {movies?.map(movie => (\r\n                    <MovieComponent key={movie.id} {...movie}/>\r\n                ))}\r\n            </div>\r\n\r\n            <EmptyListComponent hidden={movies?.length !== 0}/>\r\n            <TMDbAttribution/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieListComponent;","import React, {createContext, ReactElement, useState} from \"react\";\r\nimport {DetailedMovie} from \"../../domain/DetailedMovie\";\r\nimport {Fetcher, RequestType} from \"../../util/FetchUtil\";\r\nimport {MovieCredits} from \"../../domain/MovieCredits\";\r\nimport {Video} from \"../../domain/Video\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert, {AlertProps} from \"@material-ui/lab/Alert\";\r\nimport {IMDbRating} from \"../../domain/IMDbRating\";\r\n\r\nconst defaultContext = {\r\n    detailedMovie: {} as DetailedMovie,\r\n    rating: {id: \"\", averageRating: \"0\", numVotes: 0} as IMDbRating,\r\n    movieCredits: {} as MovieCredits,\r\n    trailer: {} as Video | null,\r\n    fetchMovieDetails: (movieId: number) => {\r\n    },\r\n    fetchMovieCredits: (movieId: number) => {\r\n    },\r\n    fetchMovieVideos: (movieId: number) => {\r\n    }\r\n}\r\n\r\nexport const DetailedMovieContext = createContext(defaultContext);\r\n\r\ninterface Props {\r\n    children: ReactElement\r\n}\r\n\r\nexport const DetailedMovieContextProvider = (props: Props) => {\r\n    const [detailedMovie, setDetailedMovie] = useState({} as DetailedMovie);\r\n    const [rating, setRating] = useState({} as IMDbRating)\r\n    const [credits, setCredits] = useState({} as MovieCredits);\r\n    const [trailer, setTrailer] = useState(null as Video | null);\r\n    const [openSnackbar, setSnackbarOpen] = useState(false);\r\n\r\n    const fetchMovieDetails = (movieId: number) => {\r\n        (new Fetcher(`${RequestType.MOVIE_DETAILS}/${movieId}`, (it) => {\r\n            setDetailedMovie(it);\r\n            fetchIMDbRating(it.imdb_id);\r\n        })).fetch().catch(handleError);\r\n    }\r\n\r\n    const fetchMovieCredits = (movieId: number) => {\r\n        (new Fetcher(`${RequestType.MOVIE_DETAILS}/${movieId}${RequestType.MOVIE_CREDITS}`, (it) => {\r\n            setCredits(it)\r\n        })).fetch().catch(handleError);\r\n    }\r\n\r\n    const fetchMovieVideos = (movieId: number) => {\r\n        (new Fetcher(`${RequestType.MOVIE_DETAILS}/${movieId}${RequestType.MOVIE_VIDEOS}`, (it) => {\r\n            extractTrailer(it.results);\r\n        })).fetch().catch(handleError);\r\n    }\r\n\r\n    const fetchIMDbRating = (imdb_id: string) => {\r\n        (new Fetcher(`/${imdb_id}${RequestType.IMDB_RATING}`, (it) => {\r\n            setRating(it.result);\r\n        }, \"https://kinodb.ssa-apis.com\", false)).fetch().catch(handleError);\r\n    }\r\n\r\n    const extractTrailer = (videos: Video[]) => {\r\n        if (videos !== undefined && videos.length > 0) {\r\n            const trailers = videos.filter(value => value.type?.toLowerCase() === 'trailer');\r\n            if (trailers.length !== 0) {\r\n                setTrailer(trailers[0]);\r\n            } else {\r\n                setTrailer(null);\r\n            }\r\n        } else {\r\n            setTrailer(null);\r\n        }\r\n    }\r\n\r\n    const handleError = () => {\r\n        setSnackbarOpen(true);\r\n    };\r\n\r\n    function Alert(props: AlertProps) {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n    const handleCloseSnackbar = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackbarOpen(false);\r\n    };\r\n\r\n    return (\r\n        <DetailedMovieContext.Provider value={{\r\n            detailedMovie,\r\n            rating,\r\n            movieCredits: credits,\r\n            trailer: trailer,\r\n            fetchMovieDetails,\r\n            fetchMovieCredits,\r\n            fetchMovieVideos\r\n        }}>\r\n            <>\r\n                {props.children}\r\n\r\n                <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleCloseSnackbar}>\r\n                    <Alert onClose={handleCloseSnackbar} severity=\"error\">\r\n                        Something went wrong\r\n                    </Alert>\r\n                </Snackbar>\r\n            </>\r\n        </DetailedMovieContext.Provider>\r\n    );\r\n}","import MoviePoster, {PosterQuality} from \"../../movie-component/movie-poster/MoviePoster\";\r\nimport React from \"react\";\r\nimport {Genre} from \"../../../domain/DetailedMovie\";\r\nimport style from \"./MovieDetailsMainSection.module.css\";\r\nimport {ComponentSize} from \"../../../util/ComponentSize\";\r\nimport GenreChip from \"../../genre-chip-component/GenreChip\";\r\n\r\ninterface Props {\r\n    title: string,\r\n    release_year: string,\r\n    runtime: number,\r\n    genres: Array<Genre>,\r\n    overview: string,\r\n    poster_path: string\r\n}\r\n\r\nconst MovieDetailsMainSection = (props: Props) => {\r\n\r\n    const runtimeHours = Math.floor(props.runtime / 60)\r\n    const runtimeInHourMinutes = (runtimeHours).toString() + 'h ' + (props.runtime - runtimeHours * 60).toString() + 'min'\r\n    return (\r\n        <div className={style.Wrapper}>\r\n            <MoviePoster poster_path={props.poster_path} size={ComponentSize.LARGE} quality={PosterQuality.MEDIUM}/>\r\n            <div className={style.RightSection}>\r\n                <div className={style.Header}>\r\n                    <h1>{props.title}</h1>\r\n                    <div className={style.YearAndRuntime}>\r\n                        <span>{props.release_year}</span><span>{runtimeInHourMinutes}</span>\r\n                    </div>\r\n                    <div className={style.GenreList}>\r\n                        {props.genres?.map((genre) => (\r\n                            GenreChip({genre: genre, size: ComponentSize.MEDIUM})\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.PlotSummary}>\r\n                    <h2>Plot Summary</h2>\r\n                    <p>{props.overview}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetailsMainSection;","import React from \"react\";\r\nimport style from \"./SidePanelInfoBlock.module.css\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    value: string\r\n}\r\n\r\nconst SidePanelInfoBlock = (props: Props) => {\r\n    return (\r\n        <div className={style.Block}>\r\n            <h2>{props.name}</h2>\r\n            <p>{props.value}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SidePanelInfoBlock;","export default __webpack_public_path__ + \"static/media/imdb.2aaed4da.svg\";","import React from \"react\";\r\nimport style from \"./Rating.module.css\";\r\nimport IMDbLogo from \"../../../../img/imdb.svg\"\r\nimport TMDbLogo from \"../../../../img/tmdb.svg\"\r\n\r\ninterface Props {\r\n    tmdb_vote_average: number,\r\n    tmdb_vote_count: string\r\n    imdb_vote_average: string,\r\n    imdb_vote_count: string\r\n}\r\n\r\nconst Rating = (props: Props) => {\r\n    return (\r\n        <div className={style.RowWrapper}>\r\n            <div className={style.Wrapper}>\r\n                <img src={TMDbLogo} alt={'Star Icon'}/>\r\n                <h2>{props.tmdb_vote_average}/10</h2>\r\n                <span>{props.tmdb_vote_count}</span>\r\n            </div>\r\n            <div className={style.Wrapper}>\r\n                <img src={IMDbLogo} alt={'Star Icon'}/>\r\n                <h2>{props.imdb_vote_average}/10</h2>\r\n                <span>{props.imdb_vote_count}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rating","export default __webpack_public_path__ + \"static/media/play.b2f4ba6a.svg\";","import Play from \"../../../../img/play.svg\";\r\nimport style from \"./TrailerButton.module.css\";\r\nimport {useContext, useState} from \"react\";\r\nimport {DetailedMovieContext} from \"../../DetailedMovieContext\";\r\n\r\nconst TrailerButton = () => {\r\n    const {trailer} = useContext(DetailedMovieContext);\r\n    const [link, setLink] = useState(\"#\");\r\n\r\n    const handleClick = () => {\r\n        switch (trailer?.site?.toLowerCase()) {\r\n            case 'youtube':\r\n                setLink(`https://www.youtube.com/watch?v=${trailer?.key}`);\r\n                break;\r\n            case 'vimeo':\r\n                setLink(`https://vimeo.com/${trailer?.key}`);\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (trailer == null) {\r\n        return (\r\n            <></>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <a href={link} className={style.WrappingLink} target=\"_blank\" rel=\"noreferrer\">\r\n                    <button className={style.PlayButton} onClick={handleClick}>\r\n                        <img src={Play} alt={'Play Button Icon'}/>\r\n                        <span>Play Trailer</span>\r\n                    </button>\r\n                </a>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TrailerButton;","import React from \"react\";\r\nimport style from \"./MovieDetailsSidePanel.module.css\";\r\nimport SidePanelInfoBlock from \"./side-panel-info-block/SidePanelInfoBlock\";\r\nimport Rating from \"./rating/Rating\";\r\nimport TrailerButton from \"./trailer-button/TrailerButton\";\r\n\r\ninterface Props {\r\n    tmdb_vote_average: number,\r\n    tmdb_vote_count: number,\r\n    imdb_vote_average: string,\r\n    imdb_vote_count: number,\r\n    director: string,\r\n    release_date: string,\r\n    budget: number,\r\n    revenue: number\r\n}\r\n\r\nconst formatPrice = (price: number) => {\r\n    return '$' + Intl.NumberFormat('en-US', {maximumSignificantDigits: 3}).format(price)\r\n}\r\n\r\nconst formatDate = (stringDate: string) => {\r\n    const date = new Date(stringDate);\r\n    const options = {year: 'numeric', month: 'long', day: 'numeric'};\r\n    return date.toLocaleDateString(\"en-IN\", options);\r\n}\r\n\r\nconst formatVoteCount = (count: number) => {\r\n    return Intl.NumberFormat('en-US').format(count);\r\n}\r\n\r\nconst MovieDetailsSidePanel = (props: Props) => {\r\n    const director = {name: \"Director\", value: props.director};\r\n    const releaseDate = {name: \"Release Date\", value: formatDate(props.release_date)};\r\n    const budget = {name: \"Budget\", value: formatPrice(props.budget)};\r\n    const revenue = {name: \"Revenue\", value: formatPrice(props.revenue)};\r\n    const infoList = [director, releaseDate, budget, revenue];\r\n\r\n    const ratingObject = {tmdb_vote_average: props.tmdb_vote_average, tmdb_vote_count: formatVoteCount(props.tmdb_vote_count), imdb_vote_average: props.imdb_vote_average, imdb_vote_count: formatVoteCount(props.imdb_vote_count)}\r\n\r\n    return (\r\n        <div className={style.SidePanel}>\r\n            <Rating {...ratingObject}/>\r\n            {infoList.map((info, index) => (\r\n                <SidePanelInfoBlock key={index} {...info}/>\r\n            ))}\r\n            <TrailerButton />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetailsSidePanel;","export default __webpack_public_path__ + \"static/media/person.d5b181df.svg\";","import React, {CSSProperties} from \"react\";\r\nimport PersonIcon from '../../../../../img/person.svg';\r\n\r\ninterface Props {\r\n    image_url: string | null\r\n}\r\n\r\nconst ActorPhoto = (props: Props) => {\r\n    let style: CSSProperties\r\n\r\n    const commonStyle = {\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center center',\r\n        width: '6em',\r\n        height: '6em',\r\n        borderRadius: '50%'\r\n    } as CSSProperties\r\n\r\n    const normalStyle = {\r\n        backgroundImage: `url(${props.image_url})`\r\n    } as CSSProperties\r\n\r\n    const emptyStyle = {\r\n        backgroundImage: `url(${PersonIcon})`\r\n    } as CSSProperties\r\n\r\n    if (props.image_url == null) {\r\n        style = emptyStyle;\r\n    } else {\r\n        style = normalStyle;\r\n    }\r\n\r\n    return(\r\n        <div style={{...commonStyle, ...style}}/>\r\n    );\r\n}\r\n\r\nexport default ActorPhoto;","import React from \"react\";\r\nimport style from \"./ActorComponent.module.css\";\r\nimport ActorPhoto from \"./actor-photo/ActorPhoto\";\r\n\r\ninterface Props {\r\n    name: string,\r\n    character: string,\r\n    profile_path: string\r\n}\r\n\r\nconst ActorComponent = (props: Props) => {\r\n    const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p\";\r\n    const profileUrl = props.profile_path == null ? null : IMAGE_BASE_URL + '/w185' + props.profile_path;\r\n    return (\r\n        <div className={style.ActorWrapper}>\r\n            <ActorPhoto image_url={profileUrl} />\r\n            <p className={style.TextCommon + ' ' + style.Name}>{props.name}</p>\r\n            <p className={style.TextCommon + ' ' + style.Character}>{props.character}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActorComponent;","import {Cast} from \"../../../domain/MovieCredits\";\r\nimport ActorComponent from \"./actor-component/ActorComponent\";\r\nimport React from \"react\";\r\nimport style from \"./MovieDetailsActorsSection.module.css\"\r\n\r\ninterface Props {\r\n    actors: Cast[]\r\n}\r\n\r\nconst MovieDetailsActorsSection = (props: Props) => {\r\n    return(\r\n        <div className={style.WrapperRow}>\r\n            {props.actors?.map((actor) => (\r\n                <ActorComponent key={actor.id} name={actor.name} character={actor.character} profile_path={actor.profile_path} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetailsActorsSection;","import {useEffect, useState} from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n    const { innerWidth: width, innerHeight: height } = window;\r\n    return {\r\n        width,\r\n        height\r\n    };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n    useEffect(() => {\r\n        function handleResize() {\r\n            setWindowDimensions(getWindowDimensions());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    return windowDimensions;\r\n}","import React, {CSSProperties, useContext, useEffect} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {DetailedMovieContext} from \"./DetailedMovieContext\";\r\nimport style from './MovieDetailsComponent.module.css';\r\nimport MovieDetailsMainSection from \"./movie-details-main-section/MovieDetailsMainSection\";\r\nimport MovieDetailsSidePanel from \"./movie-details-side-pannel/MovieDetailsSidePanel\";\r\nimport {Crew} from \"../../domain/MovieCredits\";\r\nimport MovieDetailsActorsSection from \"./movie-details-actors-section/MovieDetailsActorsSection\";\r\nimport useWindowDimensions from \"../../util/WindowDimensionUtil\";\r\n\r\nconst MovieDetailsComponent = () => {\r\n    const movieUrl = useHistory();\r\n    const movieId = parseInt(movieUrl.location.pathname.split('/').slice(-1)[0]);\r\n    const {height, width} = useWindowDimensions();\r\n\r\n    const {detailedMovie, rating, movieCredits, fetchMovieDetails, fetchMovieCredits, fetchMovieVideos} = useContext(DetailedMovieContext);\r\n\r\n    useEffect(() => {\r\n        fetchMovieDetails(movieId);\r\n        fetchMovieCredits(movieId);\r\n        fetchMovieVideos(movieId);\r\n    }, []);\r\n\r\n    const POSTER_BASE_URL = \"https://image.tmdb.org/t/p\";\r\n    let imageUrl = detailedMovie.poster_path === undefined ? '' : `${POSTER_BASE_URL}/w1280${detailedMovie.backdrop_path}`;\r\n\r\n    const notDesktop = width <= 800 || (width/height < 16/9) || (width/height >= 16/9 && height <= 700)// || height <= 480\r\n    const mainDivStyle = {\r\n        display: 'flex',\r\n        backgroundImage: `url(${imageUrl})`,\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center center',\r\n        width: '100%',\r\n        height: notDesktop? '' : '100%',\r\n        maxHeight: notDesktop ? '' : 'calc(100% - 76px)'\r\n    } as CSSProperties\r\n\r\n    const extractDirectorsName = (crew: Crew[]): string => {\r\n        if (crew !== undefined && crew.length > 0) {\r\n            const directors = crew.filter(value => value.job?.toLowerCase() === 'director');\r\n\r\n            let out = '';\r\n            if (directors.length !== 0) {\r\n                for (let director of directors) {\r\n                    out += `${director.name} & `\r\n                }\r\n            }\r\n            return out.substring(0,out.length-3);\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    const mainSectionObject = {\r\n        title: detailedMovie.title,\r\n        release_year: detailedMovie.release_date?.split('-')[0],\r\n        runtime: detailedMovie.runtime,\r\n        genres: detailedMovie.genres,\r\n        overview: detailedMovie.overview,\r\n        poster_path: detailedMovie.poster_path\r\n    }\r\n\r\n    const sidePanelObject = {\r\n        tmdb_vote_average: detailedMovie.vote_average,\r\n        tmdb_vote_count: detailedMovie.vote_count,\r\n        imdb_vote_average: rating.averageRating,\r\n        imdb_vote_count: rating.numVotes,\r\n        director: extractDirectorsName(movieCredits.crew),\r\n        release_date: detailedMovie.release_date,\r\n        budget: detailedMovie.budget,\r\n        revenue: detailedMovie.revenue\r\n    }\r\n\r\n    return (\r\n        <div style={mainDivStyle}>\r\n            <div className={style.InnerDiv}>\r\n                <div className={style.MainSection}>\r\n                    <MovieDetailsMainSection {...mainSectionObject} />\r\n                    <MovieDetailsActorsSection actors={movieCredits.cast} />\r\n                </div>\r\n                <MovieDetailsSidePanel {...sidePanelObject}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetailsComponent;","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./views/nav-bar/NavBar\";\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport MovieListComponent from \"./views/movie-list/MovieListComponent\";\r\nimport {NavigationPath} from \"./util/NavigationUtil\";\r\nimport MovieContextProvider from \"./views/movie-list/MovieListContext\";\r\nimport MovieDetailsComponent from \"./views/movie-details/MovieDetailsComponent\";\r\nimport {DetailedMovieContextProvider} from \"./views/movie-details/DetailedMovieContext\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <MovieContextProvider>\r\n            <div className=\"App\">\r\n                <DetailedMovieContextProvider>\r\n                    <Router basename={'kino-db'}>\r\n                        <NavBar/>\r\n                        <Switch>\r\n\r\n                            <Route path={NavigationPath.MOVIE_DETAILS} component={() => MovieDetailsComponent()}/>\r\n\r\n                            <Route\r\n                                path={[NavigationPath.ROOT, NavigationPath.UPCOMING_MOVIES, NavigationPath.POPULAR_MOVIES, NavigationPath.SEARCH]}\r\n                                component={() => MovieListComponent()}/>\r\n                        </Switch>\r\n                    </Router>\r\n                </DetailedMovieContextProvider>\r\n            </div>\r\n        </MovieContextProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LogoTitleLink\":\"NavBar_LogoTitleLink__3V9KR\",\"NavBar\":\"NavBar_NavBar__jRrhc\",\"LogoTitleDiv\":\"NavBar_LogoTitleDiv__3vAYf\",\"Logo\":\"NavBar_Logo__3uj8s\",\"NavTitle\":\"NavBar_NavTitle__2neut\",\"NavigationLinks\":\"NavBar_NavigationLinks__3Ld1o\",\"active\":\"NavBar_active__2knRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MovieDetailsMainSection_Wrapper__3Z__8\",\"RightSection\":\"MovieDetailsMainSection_RightSection__2HqRp\",\"Header\":\"MovieDetailsMainSection_Header__3_zHU\",\"YearAndRuntime\":\"MovieDetailsMainSection_YearAndRuntime__14gPb\",\"GenreList\":\"MovieDetailsMainSection_GenreList__eeDI2\",\"PlotSummary\":\"MovieDetailsMainSection_PlotSummary__3ND58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActorWrapper\":\"ActorComponent_ActorWrapper__3lcmO\",\"TextCommon\":\"ActorComponent_TextCommon__1tDDM\",\"Name\":\"ActorComponent_Name__3-qIx\",\"Character\":\"ActorComponent_Character__MUgjk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"poster-md\":\"MoviePoster_poster-md__1jWO1\",\"poster-lg\":\"MoviePoster_poster-lg__3R9sy\",\"EmptyImage-md\":\"MoviePoster_EmptyImage-md__21up0\",\"EmptyImage-lg\":\"MoviePoster_EmptyImage-lg__2HwtI\",\"EmptyLogo-md\":\"MoviePoster_EmptyLogo-md__21Exy\",\"EmptyLogo-lg\":\"MoviePoster_EmptyLogo-lg__258CS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Caption\":\"MoviePosterCaption_Caption__11oZa\",\"MovieTitle\":\"MoviePosterCaption_MovieTitle__CwIM-\",\"RatingRow\":\"MoviePosterCaption_RatingRow__2j1Z6\",\"RatingIcon\":\"MoviePosterCaption_RatingIcon__3mR6Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"MovieList_Wrapper__2ML9q\",\"MovieList\":\"MovieList_MovieList__3qRRe\",\"GenreList\":\"MovieList_GenreList__15mLX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RowWrapper\":\"Rating_RowWrapper__2oi4O\",\"Wrapper\":\"Rating_Wrapper__hAnUz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"GenreChip_common__2F5qz\",\"size-xsm\":\"GenreChip_size-xsm__DMRRk\",\"size-sm\":\"GenreChip_size-sm__2ItiB\",\"size-md\":\"GenreChip_size-md__2HKlT\",\"size-lg\":\"GenreChip_size-lg__2-g2f\",\"size-xlg\":\"GenreChip_size-xlg__1QGAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InnerDiv\":\"MovieDetailsComponent_InnerDiv__3R3LR\",\"MainSection\":\"MovieDetailsComponent_MainSection__28Q7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WrappingLink\":\"TrailerButton_WrappingLink__97l9Y\",\"PlayButton\":\"TrailerButton_PlayButton__2WPzU\"};"],"sourceRoot":""}